# Generated by Django 4.2.6 on 2025-06-08 04:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('stakeholders', '0003_stakeholder_desired_engagement'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='engagement',
            options={'ordering': ['-date']},
        ),
        migrations.AddField(
            model_name='engagement',
            name='communication_channel',
            field=models.CharField(choices=[('email', 'Email'), ('phone', 'Phone Call'), ('meeting', 'In-Person Meeting'), ('video', 'Video Call'), ('informal', 'Informal Chat'), ('presentation', 'Presentation'), ('workshop', 'Workshop'), ('survey', 'Survey')], default='email', max_length=50),
        ),
        migrations.AddField(
            model_name='engagement',
            name='follow_up_completed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='engagement',
            name='follow_up_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='engagement',
            name='follow_up_required',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='engagement',
            name='satisfaction_rating',
            field=models.IntegerField(blank=True, choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], null=True),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tags', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StakeholderReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('follow_up', 'Follow-up Engagement'), ('review', 'Stakeholder Review'), ('update', 'Information Update'), ('meeting', 'Scheduled Meeting')], default='follow_up', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('due_date', models.DateTimeField()),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_reminders', to=settings.AUTH_USER_MODEL)),
                ('stakeholder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='stakeholders.stakeholder')),
            ],
            options={
                'ordering': ['due_date'],
            },
        ),
        migrations.CreateModel(
            name='StakeholderInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insight_text', models.TextField()),
                ('confidence_score', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_helpful', models.BooleanField(blank=True, null=True)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('stakeholder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insights', to='stakeholders.stakeholder')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('created', 'Stakeholder Created'), ('updated', 'Stakeholder Updated'), ('engagement', 'Engagement Recorded'), ('deleted', 'Stakeholder Deleted'), ('relationship_added', 'Relationship Added'), ('tag_added', 'Tag Added'), ('tag_removed', 'Tag Removed'), ('ai_insight', 'AI Insight Generated')], max_length=20)),
                ('stakeholder_name', models.CharField(max_length=100)),
                ('stakeholder_id', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='stakeholder',
            name='tags',
            field=models.ManyToManyField(blank=True, to='stakeholders.tag'),
        ),
        migrations.CreateModel(
            name='StakeholderRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_type', models.CharField(choices=[('reports_to', 'Reports To'), ('colleagues', 'Colleagues'), ('influences', 'Influences'), ('collaborates', 'Collaborates With'), ('supervises', 'Supervises'), ('partner', 'Business Partner'), ('competitor', 'Competitor'), ('dependent', 'Dependent On')], max_length=20)),
                ('strength', models.IntegerField(choices=[(1, 'Weak'), (2, 'Medium'), (3, 'Strong')], default=2)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_relationships', to=settings.AUTH_USER_MODEL)),
                ('from_stakeholder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationships_from', to='stakeholders.stakeholder')),
                ('to_stakeholder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationships_to', to='stakeholders.stakeholder')),
            ],
            options={
                'unique_together': {('from_stakeholder', 'to_stakeholder', 'relationship_type')},
            },
        ),
    ]
